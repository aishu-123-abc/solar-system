name: solar system workflow
on: 
    workflow_dispatch:
    push:
        branches:
          - 'feature/*'
          - main
env:
    MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
    MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
    unit-testing:
        name: unit testing
        # services:
        #   mongo-db:
        #     image: siddharth67/mongo-db:non-prod
        #     ports:
        #       - 27017:20717
        # env:
        #   MONGO_URI: 'mongodb://localhost:27017/superData'
        #   MONGO_USERNAME: non-prod-user
        #   MONGO_PASSWORD: non-prod-password
        strategy:
            matrix:
              os: [ubuntu-latest]
              nodejs_version: [18, 20]
            fail-fast: false
        runs-on: ${{ matrix.os }}
        steps:
            - name: checkout repository
              uses: actions/checkout@v5

            - name: nodejs setup version ${{ matrix.nodejs_version }}
              uses: actions/setup-node@v5
              with:
                node-version: ${{ matrix.nodejs_version }}

            - name: Cache Dependencies
              uses: actions/cache@v4
              with:
                 path: node_modules
                 key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
            
            - name: Installation npm
              run: npm install

            - name: Unit testing
              id: nodejs-unit-testing-step
              run: npm test

            - name: Archive test results
              if: always()

              uses: actions/upload-artifact@v4
              with:
                name: Artifacts upload ${{ matrix.nodejs_version}}-${{ matrix.os }}
                path: test-results.xml
       
    code-coverage:
        name: code-coverage
        runs-on: ubuntu-latest
        container: 
          image: node:18
        # services:
        #   mongo-db:
        #     image: siddharth67/mongo-db:non-prod
        #     ports:
        #       - 27017:20717
        # env:
        #   MONGO_URI: 'mongodb://localhost:27017/superData'
        #   MONGO_USERNAME: non-prod-user
        #   MONGO_PASSWORD: non-prod-password
        steps:
            - name: checkout repository
              uses: actions/checkout@v5 

            - name: nodejs setup version 18
              uses: actions/setup-node@v5

            - name: Cache Dependencies
              uses: actions/cache@v4
              with:
                 path: node_modules
                 key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
            
            - name: Installation npm
              run: npm install

            - name: run code coverage
              continue-on-error: true
              run: npm run coverage

    docker:
      name: containerization
      runs-on: ubuntu-latest
      needs: [unit-testing, code-coverage]
      permissions: 
        packages: write
      steps:
        - name: checkout repository
          uses: actions/checkout@v4

        - name: Docker Login
          uses: docker/login-action@v3
          with:
            username: ${{ vars.DOCKERHUB_USERNAME }} 
            password: ${{ secrets.DOCKERHUB_PASSWORD }}


        - name: GHCR Login
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.repository_owner }} 
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: docker build for testing
          uses: docker/build-push-action@v6
          with:
            push: false
            tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

        - name: docker image test
          run: |
            docker images
            docker run --name solar-system-app -d \
                   -p 3000:3000 \
                   -e MONGO_URI=$MONGO_URI \
                   -e MONGO_USERNAME=$MONGO_USERNAME \
                   -e MONGO_PASSWORD=$MONGO_PASSWORD \
                   ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

            export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
            echo $IP

            echo Testing Image URI using wget
            wget -q -O - 127.0.0.1:3000/live | grep live
            
        - name: Container registry push
          uses: docker/build-push-action@v6
          with:
            push: true
            tags: |
              ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
              ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}

    dev-deploy:
      needs: docker
      runs-on: ubuntu-latest
      steps:
        - name: checkout repository
          uses: actions/checkout@v5
 
        - name: Install kubectl CLI 
          uses: azure/setup-kubectl@v4
          with:
            version: 'v1.32.6'
          id: install

        - name: Fetch kubernetes cluster versions
          run: |
            kubectl version
            echo -----------------------------------
            kubectl get nodes